### Constants

# Error types
General        = "GeneralError"
Type           = "TypeError"
IO             = "IOError"
OutOfBounds    = "OutOfBoundsError"
NotFound       = "NotFoundError"
Syntax         = "SyntaxError"
NotImplemented = "NotImplementedError"
Assertion      = "AssertionError"

### Classes

## The base class, from which every other
## class inherits
class Base {}

## The error class.
class Error {
    init $tag $msg {
        self.tag = tag
        self.msg = msg
    }
}


### Functions

# Misc

## Returns true if $obj is truthy,
## otherwise false
def $obj is truthy {
    if (obj) { true } else { false }
}

## Outputs a newline
def new line {
    print ""
}

## Throws an error if $predicate returns `false`
def assert $predicate {
    if (!do $predicate) {
        Error $Assertion "An assertion failed!"
    }
}

## Throws an error if $predicate returns `false`,
## with a given message ($msg)
def assert $predicate else $msg {
    if (!do $predicate) {
        Error $Assertion $msg
    }
}


# Maths

## Calculates the square root of $n.
def square root of $n {
    n ** (1 / 2)
}

## Calculates the $root'th root of $n.
def $root st root of $n {
    n ** (1 / root)
}

## Calculates the $root'th root of $n.
def $root nd root of $n {
    n ** (1 / root)
}

## Calculates the $root'th root of $n.
def $root rd root of $n {
    n ** (1 / root)
}

## Calculates the $root'th root of $n.
def $root th root of $n {
    n ** (1 / root)
}
